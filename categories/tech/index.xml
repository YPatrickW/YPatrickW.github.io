<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech on Patrick&#39;s Blog</title>
    <link>https://YPatrickW.github.io/categories/tech/</link>
    <description>Recent content in Tech on Patrick&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Jul 2022 16:10:24 +0800</lastBuildDate><atom:link href="https://YPatrickW.github.io/categories/tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Key Points in Research</title>
      <link>https://YPatrickW.github.io/p/key-points-in-research/</link>
      <pubDate>Fri, 01 Jul 2022 16:10:24 +0800</pubDate>
      
      <guid>https://YPatrickW.github.io/p/key-points-in-research/</guid>
      <description>上采样  将图像采样到更高的分辨率（由小分辨率到大分辨率） 将高维特征进行放大  Unpooling   Nearest Neighbor
Nearest Neighbor
  Bed of Nails
Bed of Nails
  Max unpooling
 根据索引信息，反池化填充    Max unpooling
Transposed Convolution (转置卷积)  对特征进行padding，然后进行卷积 Output_size = (input_size -1) * stride + filter - 2 * same padding + output padding  Transposed Convolution
def trans_conv(X, K): h, w = K.shape Y = torch.</description>
    </item>
    
    <item>
      <title>常用命令合集</title>
      <link>https://YPatrickW.github.io/p/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%90%88%E9%9B%86/</link>
      <pubDate>Mon, 29 Nov 2021 14:32:55 +0800</pubDate>
      
      <guid>https://YPatrickW.github.io/p/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%90%88%E9%9B%86/</guid>
      <description>Linux命令 查看GPU状态：
  使用nvidia-smi
nvidia-smi   安装gpustat
pip install gpustat gpustat   新开一个terminal查看：
watch -n 0.1 nvidia-smi   安装APEX加速库：
  可以下载到任意位置
  下载命令
git clone https://github.com/NVIDIA/apex cd apex   安装命令：
  官方方法：
pip install -v --disable-pip-version-check --no-cache-dir --global-option=&amp;quot;--cpp_ext&amp;quot; --global-option=&amp;quot;--cuda_ext&amp;quot; ./   安装失败可以尝试使用：
python3 setup.py install     解决windows和linux编码不兼容问题：
vim xxx.sh : set ff=unix esc :wq   后台不挂断：
nohup xxx.</description>
    </item>
    
    <item>
      <title>剑指offer</title>
      <link>https://YPatrickW.github.io/p/%E5%89%91%E6%8C%87offer/</link>
      <pubDate>Sun, 17 Oct 2021 19:03:38 +0800</pubDate>
      
      <guid>https://YPatrickW.github.io/p/%E5%89%91%E6%8C%87offer/</guid>
      <description>查找算法  平均查找长度(ASL)  $ASL = P_i * \sum C_i$  $P_i$: 第$i$​个数据元素的概率 $C_i$: 找到第$i$​个数据元素已比较过的次数     顺序查找  $ASL = 1/n * (1+2+\dots +n) = \frac{n+1}{2}$ 时间复杂度$O(n)$   二分查找   最坏$k$次二分找到
  时间复杂度$O(logn)$​
  $mid = (right+left) // 2$
  数据元素必须有序
  防止溢出：$mid = left + (right-left) // 2$​
if num &amp;lt; list[midpoint]: right = midpoint-1 else: left = midpoint+1     排序算法   冒泡排序</description>
    </item>
    
  </channel>
</rss>
